#V2
("hi" "hi")
(1 2 "hi")
(3.5 1 "hi")
-3
-3.5
x
MyPackage`foo
x
(f x)
(1 2 3)
()
(a)
Plus
(Plus 1 1)
(a b c)
(Plus 1 1)
(MatchQ x x)
(MatchQ (a) (Blank))
(Plus 1 1)
(MatchQ x x)
(MatchQ x (Blank))
(Head 1)
(Head 1.5)
(MatchQ x x)
(MatchQ (f a b c) (f a b c))
(MatchQ (f a b c) (f a b (Blank)))
(MatchQ (f x) (Blank f))
(MatchQ (f x) (Blank h))
(MatchQ 1 (Blank Int))
(MatchQ 1 (Blank Integer))
(MatchQ (f a b c) (f (BlankSequence)))
(MatchQ (f (a b) (a c) (a d)) (f (BlankSequence a)))
(MatchQ (f (a b) (a c) (a d) 0 (a e)) (f (BlankSequence a) 0 (Blank a)))
(MatchQ (f a b 0 c d) (f (BlankSequence) 0 (BlankSequence)))
(MatchQ (f (a b) (a c) (a d) 0 (a e) (a f)) (f (BlankSequence a) 0 (BlankSequence a)))
(MatchQ (f (a b) (a c) (a d) 0 (a e) (a f)) (f (BlankSequence a) (BlankNullSequence) 0 (BlankSequence a)))
(MatchQ (f (a b) (a c) (a d) 0 (a e) (a f)) (f (BlankSequence a) (BlankNullSequence) 0 (BlankNullSequence) (BlankSequence a)))
(MatchQ (f x) (f (Sequence) x))
(MatchQ (f x) (f (Sequence) (BlankSequence)))
(MatchQ (f x) (f (BlankSequence) (BlankSequence)))
(MatchQ (f x) (f (BlankNullSequence) (BlankSequence)))
(MatchQ (f x) (f (BlankNullSequence) (BlankNullSequence) (BlankSequence)))
(MatchQ (f 0 x) (f (BlankNullSequence) (BlankNullSequence) (BlankSequence)))
(MatchQ (f a) (Pattern x (Blank f)))
(MatchQ (f a) (Pattern x (Blank h)))
(MatchQ (f a) (Pattern x (Blank)))
(MatchQ (f a) (Pattern x (BlankSequence)))
(MatchQ (f a) (Pattern x (BlankNullSequence)))
(Plus 1 2)
(MatchQ ((k a) b) ((k (Pattern x (Blank))) (Pattern y (Blank))))
(MatchQ ((k a) b) ((k (Pattern x (Blank))) b))
(MatchQ (k a) (k (Pattern x (Blank))))
(MatchQ ((k a) b) ((k (Blank)) (Blank)))
(MatchQ 1 (Pattern x (Blank Integer)))
(MatchQ (f x y) (f (Pattern x (Blank)) (Pattern x (Blank))))
(MatchQ (f x x) (f (Pattern x (Blank)) (Pattern x (Blank))))
(MatchQ (f x y) (f (Pattern x (Blank)) (Pattern x (Blank))))
(MatchQ (f (a b) (a c)) (f (Pattern x (BlankSequence a))))
(MatchQ (f (a b) (a c)) (f (Pattern x (BlankSequence b))))
(MatchQ (f (a b) (a c)) (f (BlankSequence b)))
(MatchQ (f (a b) (a c)) (f (BlankSequence a)))
(MatchQ (f (a b) (a c)) (f (Pattern x (BlankSequence b))))
(MatchQ (f (a b) (a c)) (f (Pattern x (BlankSequence a))))
(MatchQ (f a) (f (BlankNullSequence) (BlankSequence)))
(MatchQ (f a) (f (Pattern x (BlankNullSequence)) (BlankSequence)))
(MatchQ (f a) (f (Pattern x (BlankNullSequence)) (Pattern y (BlankSequence))))
(List a b c)
(SameQ (f (Sequence a b) c (Sequence d e)) (f a b c d e))
(f (Sequence a b))
(MatchQ (f a b c d e) (f (BlankSequence) c (BlankSequence)))
(MatchQ (f a b c d e) (f (Pattern x (BlankSequence)) c (Pattern y (BlankSequence))))
(MatchQ (f a b c d e) (f (Pattern x (BlankSequence)) c (Pattern x (BlankSequence))))
(Set x 1)
x
(Set x 2)
(Set x 1)
(Set x 2)
x
(Set x 1)
x
(Set x 2)
x
(MatchQ (f a b 0 c) (f (BlankSequence) 0 (BlankSequence)))
(MatchQ ((k a) b) ((k (Pattern x (Blank))) (Pattern y (Blank))))\n
(Set (f x) 1)
(f x)
(MatchQ (f a) (f (BlankNullSequence) (BlankSequence)))
(Replace a (Rule a b))
(ReplaceAll (List a) (Rule a b))
( Head x)
(ReplaceRepeated x (Rule x (Plus x 1)))
(Set (f x) 1)
(f x)
(Set (f x) 1)
(f x)
(Set (f x) 1)
(f x)
(Set (f x) 1)
(f x)
(MatchQ (f x) (HoldPattern (f x)))
(Set (f x) 1)
(MatchQ (f x) (HoldPattern (f x)))
(Set (f x) 1)
(f x)
(Set (Attributes Set) (List HoldRest))
(Attributes Set)
(Set (Attributes Set) (List HoldRest))
(Set x 1)
(Attributes Set)
(SetDelayed x (Plus x 1))
(Set x (Plus x 1))
(SetDelayed x (Plus x 1))
x
(SetDelayed x (Plus x 1))
(Set (Not (Not (Pattern x (Blank)))) x)
(Not (Not False))
(dump x)
(Set x 1)
(dump x)
x
(Set x 1)
(dump x)
(Set x 1)
(dump)
(Set (Fac 1) 1)
(SetDelayed x (Plus x 1))
x
$x
(SetDelayed 1 2)
(SetDelayed (Fac 1) 1)
(SetDelayed (Fac (Pattern n (Blank Integer))) (Times n (Fac (Plus n -1))))
(Fac 3)
(SetDelayed (Fac 1) 1)
(SetDelayed (Fac (Pattern n (Blank Integer))) (Times n (Fac (Plus n -1))))
(Fac 3)
(Fac 10)
(Fac 100)
(Fac 30)
(Fac 20)
(Fac 21)
(Table x 5)
(Table x (List x 5))
(Table x (List x 3 5))
(Table x (List x 3 10 ))
(Table x (List x 3 10 2))
(SetDelayed (Nest (Pattern f (Blank)) (Pattern x (Blank)) 0) x)\n(SetDelayed (Nest (Pattern f (Blank)) (Pattern x (Blank)) (Pattern n (Blank Integer))) (f (Nest f x (Plus n -1))))\n
(Nest f x 10)
(Nest (f) x 10)
(Table (List i j) (List i 1 10) (List j 10 20))
(Set set Set)
(set x 1)
x
(Set set Set)\n(Set setd SetDelayed)\n(Set list List)\n(Set rule Rule)
(Set pattern Pattern)\n
(Set set Set)\n(Set setd SetDelayed)\n(Set list List)\n(Set rule Rule)\n(Set pattern Pattern)\n(Set blank Blank)\n(Set Int Integer)
(set sk_rules \n    (list \n        (rule (((s (pattern x (blank))) (pattern y (blank))) (pattern z (blank))) ((x z) (y z))) \n        (rule ((k (pattern x (blank))) (pattern y (blank))) \n        x)))
(Set set Set)\n(Set setd SetDelayed)\n(Set list List)\n(Set rule Rule)\n(Set pattern Pattern)\n(Set blank Blank)\n(Set Int Integer)
(set skrules \n    (list \n        (rule (((s (pattern x (blank))) (pattern y (blank))) (pattern z (blank))) ((x z) (y z))) \n        (rule ((k (pattern x (blank))) (pattern y (blank))) \n        x)))
skrules
(set succ (s ((s (k s)) k)))
(setd (skn (pattern n (blank Int))) (Nest succ (s k) n))\n
( skn 5)
(Nest f x 3)
(SetDelayed (Nest (Pattern f (Blank)) (Pattern x (Blank)) 0) x)\n(SetDelayed (Nest (Pattern f (Blank)) (Pattern x (Blank)) (Pattern n (Blank Integer))) (f (Nest f x (Plus n -1))))\n
(skn 5)
(succ 1)
(skn 2)
234a
3.5a4
(NestList f x 5)
(Xor True False)
(set (rule30 (pattern p (blank)) (pattern q (blank)) (pattern r (blank))) (Xor p (Or q r)))\n
rule30 
(rule30 True False True)
(Xor False (Or True False))
(Set (rule302 (Pattern p (Blank)) (Pattern q (Blank)) (Pattern r (Blank))) (Xor p (Or q r)))\n
(rule302 True True True)
(f (Sequence a b c))
(Table (List i j) (List i 10) (List j 10))
(Join (f a) (f b))
(Join (f a) (g b))
(Set (rule30 (Pattern p (Blank)) (Pattern q (Blank)) (Pattern r (Blank))) (Xor p (Or q r)))\n
(rule30 True False True)
30a
(SetDelayed (padval \n    (Pattern xs (Blank List))\n    (Pattern val (Blank)))\n    (Join (List val) xs (List val)))\n
(padval (List a b c) 1)
(Part (f (g a)) 1 2 3)
(Part (f a) 0)
(Part (f a) 1)
(Part (f (g a)) 1 1)
(Part (f a b) (List 1 2))
(Part (f a b c) (List 1 2))
(Part (f a b c) (List 1 3))
(Part f a (List 0))
(Part (f a) (List 1))
(Part (f a) (List 0))
(Set u0 (ReplaceAll (List 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (List (Rule 0 False) (Rule 1 True))))\n
(Map f (g a b c))
(Map f (List a b c))
\n(SetDelayed (padval \n    (Pattern xs (Blank List))\n    (Pattern val (Blank)))\n    (Join (List val) xs (List val)))\n\n(SetDelayed (lilpartition3\n    (Pattern xs (Blank List)))\n    (Table (List (Part xs i) (Part xs (Plus i 1)) (Part xs (Plus i 2))) (List i (Plus (Length xs) -2))\n    ))\n\n(SetDelayed (foo (Pattern xs (Blank List)))\n    (Map rule30 (lilpartition3 (padval xs False))))\n\n(Set u0 (ReplaceAll (List 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (List (Rule 0 False) (Rule 1 True))))\n
(SetDelayed (rule30 \n    (List \n        (Pattern p (Blank)) \n        (Pattern q (Blank)) \n        (Pattern r (Blank)))) \n    (Xor p (Or q r)))\n
(Set ls (ReplaceAll (NestList foo u0 20) (List (Rule False 0) (Rule True 1))))\n
(SetDelayed (rule30 \n    (List \n        (Pattern p (Blank)) \n        (Pattern q (Blank)) \n        (Pattern r (Blank)))) \n    (Xor p (Or q r)))\n\n(* (setd (pad_zero (pattern xs (blank List))) (Join (List 0) xs (List 0)))\n(setd (idxs (pattern n (blank Int))) (Table (Plus i n_) (List n_ 0 n))) *)\n\n(SetDelayed (padval \n    (Pattern xs (Blank List))\n    (Pattern val (Blank)))\n    (Join (List val) xs (List val)))\n\n(SetDelayed (lilpartition3\n    (Pattern xs (Blank List)))\n    (Table (List (Part xs i) (Part xs (Plus i 1)) (Part xs (Plus i 2))) (List i (Plus (Length xs) -2))\n    ))\n\n(SetDelayed (foo (Pattern xs (Blank List)))\n    (Map rule30 (lilpartition3 (padval xs False))))\n\n(Set u0 (ReplaceAll (List 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (List (Rule 0 False) (Rule 1 True))))\n\n(Set ls (ReplaceAll (NestList foo u0 20) (List (Rule False 0) (Rule True 1))))\n
(SetDelayed (rule30 \n    (List \n        (Pattern p (Blank)) \n        (Pattern q (Blank)) \n        (Pattern r (Blank)))) \n    (Xor p (Or q r)))\n\n(* (setd (pad_zero (pattern xs (blank List))) (Join (List 0) xs (List 0)))\n(setd (idxs (pattern n (blank Int))) (Table (Plus i n_) (List n_ 0 n))) *)\n\n(SetDelayed (padval \n    (Pattern xs (Blank List))\n    (Pattern val (Blank)))\n    (Join (List val) xs (List val)))\n\n(SetDelayed (lilpartition3\n    (Pattern xs (Blank List)))\n    (Table (List (Part xs i) (Part xs (Plus i 1)) (Part xs (Plus i 2))) (List i (Plus (Length xs) -2))\n    ))\n\n(SetDelayed (foo (Pattern xs (Blank List)))\n    (Map rule30 (lilpartition3 (padval xs False))))\n\n(Set u0 (ReplaceAll (List 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (List (Rule 0 False) (Rule 1 True))))\n
(lilpartition3 u0)
(Length (List a b c))
(Length a)
\n(SetDelayed (rule30 \n    (List \n        (Pattern p (Blank)) \n        (Pattern q (Blank)) \n        (Pattern r (Blank)))) \n    (Xor p (Or q r)))\n\n(* (setd (pad_zero (pattern xs (blank List))) (Join (List 0) xs (List 0)))\n(setd (idxs (pattern n (blank Int))) (Table (Plus i n_) (List n_ 0 n))) *)\n\n(SetDelayed (padval \n    (Pattern xs (Blank List))\n    (Pattern val (Blank)))\n    (Join (List val) xs (List val)))\n\n(SetDelayed (lilpartition3\n    (Pattern xs (Blank List)))\n    (Table (List (Part xs i) (Part xs (Plus i 1)) (Part xs (Plus i 2))) (List i (Plus (Length xs) -2))\n    ))\n\n(SetDelayed (foo (Pattern xs (Blank List)))\n    (Map rule30 (lilpartition3 (padval xs False))))\n\n(Set u0 (ReplaceAll (List 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (List (Rule 0 False) (Rule 1 True))))\n
(lilpartition3 xs)
xs
(lilpartition3 u0)
\n(SetDelayed (rule30 \n    (List \n        (Pattern p (Blank)) \n        (Pattern q (Blank)) \n        (Pattern r (Blank)))) \n    (Xor p (Or q r)))\n\n(* (setd (pad_zero (pattern xs (blank List))) (Join (List 0) xs (List 0)))\n(setd (idxs (pattern n (blank Int))) (Table (Plus i n_) (List n_ 0 n))) *)\n\n(SetDelayed (padval \n    (Pattern xs (Blank List))\n    (Pattern val (Blank)))\n    (Join (List val) xs (List val)))\n\n(SetDelayed (lilpartition3\n    (Pattern xs (Blank List)))\n    (Table (List (Part xs i) (Part xs (Plus i 1)) (Part xs (Plus i 2))) (List i (Plus (Length xs) -2))\n    ))\n\n(SetDelayed (foo (Pattern xs (Blank List)))\n    (Map rule30 (lilpartition3 (padval xs False))))\n\n(Set u0 (ReplaceAll (List 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (List (Rule 0 False) (Rule 1 True))))\n
(foo u0)
(Set ls (ReplaceAll (NestList foo u0 20) (List (Rule False 0) (Rule True 1))))\n
(Part ls 1)
(Part ls 2)
(Part ls 3)
(Part ls 4)
(Part ls 5)
(Part ls 6)
\n(SetDelayed (rule30 \n    (List \n        (Pattern p (Blank)) \n        (Pattern q (Blank)) \n        (Pattern r (Blank)))) \n    (Xor p (Or q r)))\n\n(* (setd (pad_zero (pattern xs (blank List))) (Join (List 0) xs (List 0)))\n(setd (idxs (pattern n (blank Int))) (Table (Plus i n_) (List n_ 0 n))) *)\n\n(SetDelayed (padval \n    (Pattern xs (Blank List))\n    (Pattern val (Blank)))\n    (Join (List val) xs (List val)))\n\n(SetDelayed (lilpartition3\n    (Pattern xs (Blank List)))\n    (Table (List (Part xs i) (Part xs (Plus i 1)) (Part xs (Plus i 2))) (List i (Plus (Length xs) -2))\n    ))\n\n(SetDelayed (foo (Pattern xs (Blank List)))\n    (Map rule30 (lilpartition3 (padval xs False))))\n\n(Set u0 (ReplaceAll (List 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (List (Rule 0 False) (Rule 1 True))))\n\n(Set ls (ReplaceAll (NestList foo u0 20) (List (Rule False 0) (Rule True 1))))\n
(Part ls 1)
(Part ls 2)
(Part ls 3)
(Part ls 4)
(* combinators *)\n(Set skrules \n    (List \n        (Rule (((s (Pattern x (Blank))) (Pattern y (Blank))) (Pattern z (Blank))) ((x z) (y z))) \n        (Rule ((k (Pattern x (Blank))) (Pattern y (Blank))) \n        x)))\n\n(Set succ (s ((s (k s)) k)))\n(SetDelayed (skn (Pattern n (Blank Integer))) (Nest succ (s k) n))\n
(skn 3)
(skn 100)
(Set u0 (Join (Table 0 100) (List 1) (Table 0 100)))\n
(Set ls (ReplaceAll (NestList foo u0 100) (List (Rule False 0) (Rule True 1))))\n
\n(SetDelayed (rule30 \n    (List \n        (Pattern p (Blank)) \n        (Pattern q (Blank)) \n        (Pattern r (Blank)))) \n    (Xor p (Or q r)))\n\n(* (setd (pad_zero (Pattern xs (Blank List))) (Join (List 0) xs (List 0)))\n(setd (idxs (Pattern n (Blank Integer))) (Table (Plus i n_) (List n_ 0 n))) *)\n\n(SetDelayed (padval \n    (Pattern xs (Blank List))\n    (Pattern val (Blank)))\n    (Join (List val) xs (List val)))\n\n(SetDelayed (lilpartition3\n    (Pattern xs (Blank List)))\n    (Table (List (Part xs i) (Part xs (Plus i 1)) (Part xs (Plus i 2))) (List i (Plus (Length xs) -2))\n    ))\n\n(SetDelayed (foo (Pattern xs (Blank List)))\n    (Map rule30 (lilpartition3 (padval xs False))))\n\n(Set u0 (ReplaceAll (List 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (List (Rule 0 False) (Rule 1 True))))\n
(Set u0 (Join (Table 0 100) (List 1) (Table 0 100)))\n
(foo u0)
(SetDelayed (foo2 (Pattern xs (Blank List))) (foo (ReplaceAll xs (List (Rule 0 False) (Rule 1 True)))))\n
(foo2 u0)
(NestList foo u0 2)
(NestList foo2 u0 2)
(NestList foo2 u0 10)
(NestList foo2 u0 20)
(Set u0 (Join (Table 0 100) (List 1) (Table 0 100)))\n(Set x0 (ReplaceAll u0 (List (Rule 0 False) (Rule 1 True))))\n
(Set u0 (Join (Table 0 100) (List 1) (Table 0 100)))\n
(Set ls (ReplaceAll (NestList foo u0 5) (List (Rule False 0) (Rule True 1))))\n
(Set (rule30 (Pattern p (Blank)) (Pattern q (Blank)) (Pattern r (Blank))) (Xor p (Or q r)))\n\n(SetDelayed (rule30 \n    (List \n        (Pattern p (Blank)) \n        (Pattern q (Blank)) \n        (Pattern r (Blank)))) \n    (Xor p (Or q r)))\n\n(* (setd (pad_zero (Pattern xs (Blank List))) (Join (List 0) xs (List 0)))\n(setd (idxs (Pattern n (Blank Integer))) (Table (Plus i n_) (List n_ 0 n))) *)\n\n(SetDelayed (padval \n    (Pattern xs (Blank List))\n    (Pattern val (Blank)))\n    (Join (List val) xs (List val)))\n\n(SetDelayed (lilpartition3\n    (Pattern xs (Blank List)))\n    (Table (List (Part xs i) (Part xs (Plus i 1)) (Part xs (Plus i 2))) (List i (Plus (Length xs) -2))\n    ))\n\n(SetDelayed (foo (Pattern xs (Blank List)))\n    (Map rule30 (lilpartition3 (padval xs False))))\n\n(Set u0 (ReplaceAll (List 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (List (Rule 0 False) (Rule 1 True))))\n(Set u0 (Join (Table 0 100) (List 1) (Table 0 100)))\n(Set x0 (ReplaceAll u0 (List (Rule 0 False) (Rule 1 True))))\n
(Set ls (NestList foo x0 5))\n
\n(SetDelayed (rule30 \n    (List \n        (Pattern p (Blank)) \n        (Pattern q (Blank)) \n        (Pattern r (Blank)))) \n    (Xor p (Or q r)))\n\n(* (setd (pad_zero (Pattern xs (Blank List))) (Join (List 0) xs (List 0)))\n(setd (idxs (Pattern n (Blank Integer))) (Table (Plus i n_) (List n_ 0 n))) *)\n\n(SetDelayed (padval \n    (Pattern xs (Blank List))\n    (Pattern val (Blank)))\n    (Join (List val) xs (List val)))\n\n(SetDelayed (lilpartition3\n    (Pattern xs (Blank List)))\n    (Table (List (Part xs i) (Part xs (Plus i 1)) (Part xs (Plus i 2))) (List i (Plus (Length xs) -2))\n    ))\n\n(SetDelayed (foo (Pattern xs (Blank List)))\n    (Map rule30 (lilpartition3 (padval xs False))))\n\n(Set u0 (ReplaceAll (List 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (List (Rule 0 False) (Rule 1 True))))\n(Set u0 (Join (Table 0 100) (List 1) (Table 0 100)))\n(Set x0 (ReplaceAll u0 (List (Rule 0 False) (Rule 1 True))))\n
x0
(foo x0)
(Length (foo x0))
(Set ls (NestList foo x0 5))\n
(Set ls (NestList foo x0 10))\n
(Set ls (NestList foo x0 20))\n
(Set ls (NestList foo x0 40))\n
(Set ls (NestList foo x0 80))\n
(Set ps (ReplaceAll ls (List (Rule 0 (List 1. 1. 1.)) (Rule 1 (List 0. 0. 0.)))))\n
(Part ls 70)
Fac
(SetDelayed (First (List (Pattern x (Blank)) (Pattern rest (BlankNullSequence)))) x)\n(SetDelayed (First (Pattern xs (BlankNullSequence))) (First (List xs)))
(First (List a ))
(Set (rule30 (Pattern p (Blank)) (Pattern q (Blank)) (Pattern r (Blank))) (Xor p (Or q r)))\n\n(SetDelayed (rule30 \n    (List \n        (Pattern p (Blank)) \n        (Pattern q (Blank)) \n        (Pattern r (Blank)))) \n    (Xor p (Or q r)))\n\n(* (setd (pad_zero (Pattern xs (Blank List))) (Join (List 0) xs (List 0)))\n(setd (idxs (Pattern n (Blank Integer))) (Table (Plus i n_) (List n_ 0 n))) *)\n\n(SetDelayed (padval \n    (Pattern xs (Blank List))\n    (Pattern val (Blank)))\n    (Join (List val) xs (List val)))\n\n(SetDelayed (lilpartition3\n    (Pattern xs (Blank List)))\n    (Table (List (Part xs i) (Part xs (Plus i 1)) (Part xs (Plus i 2))) (List i (Plus (Length xs) -2))\n    ))\n\n(SetDelayed (foo (Pattern xs (Blank List)))\n    (Map rule30 (lilpartition3 (padval xs False))))\n\n(Set u0 (Join (Table 0 100) (List 1) (Table 0 100)))\n(Set x0 (ReplaceAll u0 (List (Rule 0 False) (Rule 1 True))))\n
(First (Timing (NestList foo x0 5)))
(First (Timing (NestList foo x0 10)))
(First (Timing (NestList foo x0 20)))
(Set (rule30 (Pattern p (Blank)) (Pattern q (Blank)) (Pattern r (Blank))) (Xor p (Or q r)))\n\n(SetDelayed (rule30 \n    (List \n        (Pattern p (Blank)) \n        (Pattern q (Blank)) \n        (Pattern r (Blank)))) \n    (Xor p (Or q r)))\n\n(* (setd (pad_zero (Pattern xs (Blank List))) (Join (List 0) xs (List 0)))\n(setd (idxs (Pattern n (Blank Integer))) (Table (Plus i n_) (List n_ 0 n))) *)\n\n(SetDelayed (padval \n    (Pattern xs (Blank List))\n    (Pattern val (Blank)))\n    (Join (List val) xs (List val)))\n\n(SetDelayed (lilpartition3\n    (Pattern xs (Blank List)))\n    (Table (List (Part xs i) (Part xs (Plus i 1)) (Part xs (Plus i 2))) (List i (Plus (Length xs) -2))\n    ))\n\n(SetDelayed (foo (Pattern xs (Blank List)))\n    (Map rule30 (lilpartition3 (padval xs False))))\n\n(Set u0 (Join (Table 0 100) (List 1) (Table 0 100)))\n(Set x0 (ReplaceAll u0 (List (Rule 0 False) (Rule 1 True))))\n
(First (Timing (NestList foo x0 20)))
(First (Timing (NestList foo x0 100)))
(* combinators *)\n(Set skrules \n    (List \n        (Rule (((s (Pattern x (Blank))) (Pattern y (Blank))) (Pattern z (Blank))) ((x z) (y z))) \n        (Rule ((k (Pattern x (Blank))) (Pattern y (Blank))) \n        x)))\n\n(Set succ (s ((s (k s)) k)))\n(SetDelayed (skn (Pattern n (Blank Integer))) (Nest succ (s k) n))\n\n(Set skplus ((s (k s)) (s (k ((s (k s)) k)))))\n(Set sktimes ((s (k s)) k))\n(Set skpow ((s (k (s ((s k) k)))) k))\n
(((skn 10) s) k)
(ReplaceRepeated (((skn 10) s) k) skrules)
(Plus x (Plus y z))
(Plus x (Plus y (Plus z a)))
(Times a (Times b c))
(Set (Attributes f) (List Flat))
(f a (f b))
(f (Sequence a b))
(Set (Attributes f) (List SequenceHold))
(f (Sequence a b))
(ReplaceAll (f a b) (List a b))
(ReplaceAll (f a b) (Rule a b))
(Set ((k a) b) "hi")
((k a) b)
(Set ((k a) b) "hi")
((k a) b)
(Set ((k (Pattern x (Blank))) (Pattern y (Blank))) x)
((k 1) 2)
(Set (((s (Pattern x (Blank))) (Pattern y (Blank))) (Pattern z (Blank))) ((x z) (y z)))
(((s a) b) c)
(* combinators *)\n(Set skrules \n    (List \n        (Rule (((s (Pattern x (Blank))) (Pattern y (Blank))) (Pattern z (Blank))) ((x z) (y z))) \n        (Rule ((k (Pattern x (Blank))) (Pattern y (Blank))) \n        x)))\n
(Set f 1)
f
(Clear f)
f
(Set f 1)
f
(Clear f)
f
(Set f 1)
(Set g 2)
(Clear f g)
f
g
(* combinators *)\n(Set skrules \n    (List \n        (Rule (((s (Pattern x (Blank))) (Pattern y (Blank))) (Pattern z (Blank))) ((x z) (y z))) \n        (Rule ((k (Pattern x (Blank))) (Pattern y (Blank))) \n        x)))\n
(Set succ (s ((s (k s)) k)))\n(SetDelayed (skn (Pattern n (Blank Integer))) (Nest succ (s k) n))\n
(Set skplus ((s (k s)) (s (k ((s (k s)) k)))))\n(Set sktimes ((s (k s)) k))\n(Set skpow ((s (k (s ((s k) k)))) k))\n
(Set x (Nest succ (s k) 10))\n
(ReplaceRepeated ((x s) k) skrules)
